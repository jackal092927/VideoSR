{
  "detection": {
    "method": "hybrid",
    "traditional_cv": {
      "enabled": true,
      "hsv_lower": [5, 50, 50],
      "hsv_upper": [25, 255, 255],
      "hsv_lower2": [160, 50, 50],
      "hsv_upper2": [179, 255, 255],
      "morph_kernel": 5,
      "min_area": 100,
      "roi": null,
      "invert_threshold": false,
      "threshold_value": 127,
      "use_hough": false,
      "hough_dp": 1.2,
      "hough_minDist": 20.0,
      "hough_param1": 100.0,
      "hough_param2": 30.0,
      "hough_minRadius": 10,
      "hough_maxRadius": 100
    },
    "dino": {
      "enabled": true,
      "model": "facebook/dinov2-base",
      "model_size": "base",
      "threshold": 0.6,
      "patch_size": 14,
      "device": "auto",
      "use_sam": false,
      "sam_model": "sam_vit_h_4b8939.pth",
      "segmentation": {
        "enabled": true,
        "min_mask_area": 500,
        "max_mask_area": 50000
      }
    },
    "llm": {
      "enabled": true,
      "backend": "ollama",
      "model": "llava",
      "api_key_env": "OPENAI_API_KEY",
      "temperature": 0.1,
      "max_tokens": 500,
      "system_prompt": "You are a physics analysis assistant specializing in motion tracking and object detection. Analyze video frames to identify moving objects, extract precise coordinates, and provide physics-relevant insights. Always respond with structured JSON data.",
      "user_prompt_template": "Analyze this frame from a physics experiment video. The scenario involves: {scenario_description}. Extract: 1) Main moving object coordinates (center point in pixels), 2) Object trajectory hints, 3) Physics-relevant observations. Respond in JSON format with keys: 'object_center', 'confidence', 'observations'",
      "rate_limit_delay": 1.0,
      "cache_responses": true,
      "fallback_mode": "traditional_cv",
      "ollama_host": "http://localhost:11434",
      "openai_model": "gpt-4-vision-preview"
    },
    "hybrid": {
      "fusion_method": "weighted_average",
      "weights": {
        "traditional_cv": 0.4,
        "dino": 0.4,
        "llm": 0.2
      },
      "confidence_threshold": 0.3,
      "fallback_chain": ["llm", "dino", "traditional_cv"]
    }
  },
  "tracking": {
    "method": "hybrid",
    "kalman_filter": {
      "enabled": true,
      "process_noise": 0.1,
      "measurement_noise": 1.0,
      "initial_state": [0, 0, 0, 0],
      "state_covariance": [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 10, 0], [0, 0, 0, 10]]
    },
    "optical_flow": {
      "enabled": true,
      "method": "lucas_kanade",
      "winSize": [21, 21],
      "maxLevel": 3,
      "criteria": {"type": "COUNT+EPS", "maxCount": 30, "epsilon": 0.01}
    },
    "deep_sort": {
      "enabled": false,
      "model_path": null,
      "max_age": 30,
      "n_init": 3
    },
    "interpolation": {
      "max_gap": 10,
      "method": "cubic_spline",
      "smoothness": 0.5
    }
  },
  "preprocessing": {
    "stabilization": {
      "enabled": false,
      "method": "ecc",
      "crop_border": 50
    },
    "enhancement": {
      "clahe": {
        "enabled": true,
        "clipLimit": 2.0,
        "tileGridSize": [8, 8]
      },
      "denoising": {
        "enabled": true,
        "method": "nlm",
        "h": 10,
        "templateWindowSize": 7,
        "searchWindowSize": 21
      }
    },
    "resolution": {
      "scale_factor": 1.0,
      "interpolation": "bicubic"
    }
  },
  "physics": {
    "scenario": "auto",
    "auto_detection": {
      "enabled": true,
      "confidence_threshold": 0.7,
      "scenarios": ["projectile", "inclined_plane", "pendulum", "free_fall", "collision", "circular_motion"]
    },
    "constants": {
      "gravity": 9.81,
      "air_density": 1.225,
      "drag_coefficient": 0.47
    },
    "models": {
      "projectile": {
        "fit_method": "least_squares",
        "include_drag": false,
        "variable_gravity": false
      },
      "inclined_plane": {
        "include_friction": true,
        "friction_model": "coulomb",
        "static_friction_coeff": 0.3,
        "kinetic_friction_coeff": 0.2
      },
      "pendulum": {
        "damping": "none",
        "drive_force": false
      },
      "collision": {
        "elasticity": 1.0,
        "multiple_objects": false
      }
    },
    "calibration": {
      "pixels_per_meter": null,
      "reference_object": null,
      "auto_scale": true,
      "scale_detection_prompt": "Identify any reference objects (ruler, known size items) in this frame and estimate their real-world dimensions in meters."
    }
  },
  "output": {
    "data_format": {
      "csv": {
        "enabled": true,
        "filename": "enhanced_measurements.csv",
        "include_metadata": true,
        "decimal_precision": 6
      },
      "json": {
        "enabled": true,
        "filename": "analysis_results.json",
        "include_raw_detections": true
      },
      "hdf5": {
        "enabled": false,
        "filename": "analysis_data.h5",
        "compression": "gzip"
      }
    },
    "visualization": {
      "annotated_video": {
        "enabled": true,
        "filename": "enhanced_annotated.mp4",
        "codec": "mp4v",
        "fps": null,
        "draw_trail": 50,
        "trail_color": [0, 255, 0],
        "detection_boxes": true,
        "physics_overlay": true
      },
      "plots": {
        "enabled": true,
        "directory": "plots",
        "format": "png",
        "dpi": 300,
        "plots": {
          "trajectory": {
            "enabled": true,
            "filename": "trajectory.png",
            "include_fit": true
          },
          "position_time": {
            "enabled": true,
            "filename": "position_time.png",
            "x_axis": "time_s",
            "y_axes": ["x_px", "y_px"],
            "include_smooth": true
          },
          "velocity_time": {
            "enabled": true,
            "filename": "velocity_time.png",
            "include_acceleration": false
          },
          "energy_analysis": {
            "enabled": true,
            "filename": "energy_analysis.png",
            "kinetic_energy": true,
            "potential_energy": true
          }
        }
      },
      "reports": {
        "physics_report": {
          "enabled": true,
          "filename": "physics_analysis_report.json",
          "include_fitted_parameters": true,
          "include_uncertainties": true,
          "include_recommendations": true
        },
        "performance_report": {
          "enabled": true,
          "filename": "performance_report.json",
          "include_timings": true,
          "include_detection_stats": true
        }
      }
    }
  },
  "performance": {
    "parallel_processing": {
      "enabled": true,
      "batch_size": 16,
      "num_workers": 4
    },
    "gpu_acceleration": {
      "enabled": true,
      "memory_limit": null,
      "precision": "float32"
    },
    "caching": {
      "enabled": true,
      "cache_dir": ".video_analysis_cache",
      "max_cache_size": "10GB"
    },
    "optimization": {
      "skip_frames": 1,
      "downsample_large_videos": true,
      "max_dimension": 1920
    }
  },
  "logging": {
    "level": "INFO",
    "file": "analysis.log",
    "format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    "include_timestamps": true,
    "include_performance_metrics": true
  },
  "experimental": {
    "use_gpt4v_for_physics": true,
    "physics_prompt": "Based on the trajectory data and physical scenario, analyze the motion and provide physics insights. Calculate approximate values for acceleration, forces, and energy. Consider: {scenario_details}",
    "adaptive_prompts": true,
    "uncertainty_estimation": false
  }
}
